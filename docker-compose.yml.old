version: '3.8'

networks:
  app_network:
    driver: bridge

services:
  db:
    image: postgres:16
    container_name: db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
       - printing_ecommerce_shop_jyce:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DEBUG=prisma:*
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        apt-get update && 
        apt-get install -y netcat-openbsd postgresql-client &&
        until nc -z db ${DB_PORT}; do 
          echo 'Waiting for database to be ready...'; 
          sleep 2; 
        done && 
        npx prisma migrate deploy  &&
      node app.js
      "
    networks:
      - app_network

  frontend:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  printing_ecommerce_shop_jyce:
